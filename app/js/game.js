// Generated by CoffeeScript 1.7.1
(function() {
  $(function() {
    var checkForWin, clearBoard, cnt, resetBoard;
    cnt = 0;
    clearBoard = function() {
      $('.board-cell').text('');
      $('.board-cell').removeClass('o');
      $('.board-cell').removeClass('x');
      return cnt = 0;
    };
    resetBoard = function() {
      clearBoard();
      $('#gameboard').hide();
      return $('#start-game').fadeIn(500);
    };
    checkForWin = function(cell) {
      var board, p, win, wins, _i, _len, _ref, _ref1, _ref2;
      console.log("Checking for win for cell " + cell);
      board = ($('.board-cell').map(function(idx, el) {
        return $(el).text();
      })).get();
      win = '';
      wins = [[[0, 1, 2], [0, 3, 6], [0, 4, 8]], [[0, 1, 2], [1, 4, 7]], [[0, 1, 2], [2, 5, 8], [2, 4, 6]], [[3, 4, 5], [0, 3, 6]], [[3, 4, 5], [1, 4, 7], [0, 4, 8], [2, 4, 6]], [[3, 4, 5], [2, 5, 8]], [[6, 7, 8], [0, 3, 6], [2, 4, 6]], [[6, 7, 8], [1, 4, 7]], [[6, 7, 8], [2, 5, 8], [0, 4, 8]]];
      _ref = wins[cell];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        console.log("Running pattern " + p);
        if ((('' !== (_ref2 = board[p[0]]) && _ref2 === (_ref1 = board[p[1]])) && _ref1 === board[p[2]])) {
          win = board[p[0]];
        }
      }
      if (win !== '') {
        alert(win + ' won!');
        return resetBoard();
      }
    };
    $('#start-game').on('click', function(e) {
      clearBoard();
      $(this).hide();
      return $('#gameboard').fadeIn(500);
    });
    return $('.board-cell').on('click', function(e) {
      var cell, mark;
      mark = cnt % 2 === 0 ? 'x' : 'o';
      if (($(this).text().replace(/^\s+|\s+$/g, "")) === '') {
        $(this).text(mark);
        $(this).addClass(mark);
        cnt += 1;
        cell = $(this).attr('id').replace(/^cell\-/, "");
        if (cnt > 4) {
          return checkForWin(cell);
        }
      }
    });
  });

}).call(this);

//# sourceMappingURL=game.map
